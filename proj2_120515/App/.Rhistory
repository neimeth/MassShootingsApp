10 + 20
citation()
10 +
20
citation()
citation(+++++)
citation
3 / 1
3 * 12
2 ^ 2
clear
clear()
57 * 61
5 ^ 4
(1+2)*4
4 / 2 * 3
?syntax
?Syntax
sales <- 350
sales
350 -> sales
clear
clear)
clear()
remove(sales)
350 -> sales
sales <- 350
remove(sales)
sales <- 350
royalty<- 7
sales * royalty
revenue <- sales * royalty
revenue <- revenue + 550
revenue
sqrt(25)
abs(-1)
abs(-10)
remove(revenue, royalty, sales)
round(3.1415, 2)
sqrt(x=25)
sqrt(25)
x
x = 3.1415
digits = 2
round (x, digits)
remove(digits, x)
round(x = 3.1415, digits = 2)
age = 2
age <- 2
remove(age)
sales -< 100
sales <- 100
remove(sales)
ls
clear
sales.by.month <- 0, 100
sales.by.month <- c(0, 100, 200, 50, 0, 0, 0, 0, 0, 0, 0, 0)
sales.by.month
sales.by.month
sales.by.month[2]
february.sales <- sales.by.month[2]
february.sales
sales.by.month[5] <- 25
sales.by.month
length(x = sales.by.month)
sales.by.month * 7
sales.by.month[5] <- 0
sales.by.month
days.per.month <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
profit <- sales.by.month * 7
profit
profit / days.per.month
remove(all)
remove()
remove(days.per.month, february.sales, profit, sales.by.month)
days.per.month <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
sales.by.month <- c(0, 100, 200, 50, 0, 0, 0, 0, 0, 0, 0, 0)
profit <- sales.by.month * 7
profit / days.per.month
remove(days.per.month, profit, sales.by.month)
greetin <- "hello"
greeting <- "hello"
remove(greetin)
months <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
months
months[4]
nchar(greeting)
nchar("greeting")
nchar(greeting)
nchar(months)
2 + 2 == 4
2 * 2 == 4
2 < 4
2 > 4
4 < 2
4 > 2
2+2 == 5
3*3 + 4*4 == 5*5
sqrt(25) == 5
is.the.party.correct <- 2 + 2 == 5
months <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
days.per.month <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
sales.by.month <- c(0, 100, 200, 50, 0, 0, 0, 0, 0, 0, 0, 0)
sales.by.month < 0
sales.by.month <= 0
sales.by.month > 0
any.sales.this.month = sales.by.month > 0
any.sales.this.month
"cat" == "cat"
"cat" == "c a t"
"cat" == "CAT"
sales.by.month(2, 3, 4)
sales.by.month(c(2, 3, 4))
sales.by.month[2, 3, 4]
sales.by.month[c(2, 3, 4)]
sales.by.month[2:4]
months[sales.by.month > 0]
months[any.sales.this.month]
sales.by.month > 0
sales.by.month[sales.by.month > 0]
stock.levels
stock.levels(c("high", "high", "low", "out"))
stock.levels <- c("high", "high", "low", "out", "out", "high", "high", "high", "high", "high", "high")
length(stock.levels)
stock.levels
stock.levels(12) <- "high"
stock.levels <- c(stock.levels,"high")
stock.levels
months[stock.levels == "out"]
months[stock.levels == "out" or stock.levels == "low"]
months[stock.levels == "out" | stock.levels == "low"]
months[stock.levels != "high"]
months[stock.levels == "high"]
q()
clear
binom.test(x = 62, n = 100, p = .5)
binom.test(x = 62, n = 100, p = .5)
binom.test(x = 51, n = 100, p = .5)
binom.test(x = 62, n = 100, p = .5)
500000 / 12
500000 * .55 /12
setwd("~/Documents/DataScience/R/Project2")
library(shiny)
runApp("App")
nrow(Data2013g)
nrow(Data2014g)
nrow(Data2015g)
View(Data13.15g)
names(Import2015)
Data2015 <- Import2015[, c(2, 4:7)]
names(Data2015)[2] <- "Killed"
names(Data2015)[3] <- "Wounded"
names(Import2014)
Data2014 <- Import2014[, c(2, 4:7)]
names(Data2014)[2] <- "Killed"
names(Data2014)[3] <- "Wounded"
names(Import2013)
Data2013 <- Import2013[, c(2, 4:7)]
names(Data2013) <- c("Date", "Killed", "Wounded", "Location", "Article")
Data13.15 <- rbind(Data2013, Data2014, Data2015)
Import2015 <- read.csv("Data/2015CURRENT.csv", header=TRUE)
Import2014 <- read.csv("Data/2014MASTER.csv", header=TRUE)
Import2013 <- read.csv("Data/2013MASTER.csv", header=TRUE)
Import1966 <- read.csv("Data/stanfordnew.csv", header = TRUE)
##### DATA CLEANING 2013 - 2015
names(Import2015)
Data2015 <- Import2015[, c(2, 4:7)]
names(Data2015)[2] <- "Killed"
names(Data2015)[3] <- "Wounded"
names(Import2014)
Data2014 <- Import2014[, c(2, 4:7)]
names(Data2014)[2] <- "Killed"
names(Data2014)[3] <- "Wounded"
names(Import2013)
Data2013 <- Import2013[, c(2, 4:7)]
names(Data2013) <- c("Date", "Killed", "Wounded", "Location", "Article")
Data13.15 <- rbind(Data2013, Data2014, Data2015)
runApp("App")
setwd("~/Documents/DataScience/R/Project2/App")
shiny::runApp(host="0.0.0.0",port=3168)
shiny::runApp()
shiny::runApp()
Data2015g$lon <- as.factor(Data2015g$lon)
Data2015g$lat <- as.factor(Data2015g$lat)
save.image(file="Project2_UD.RData.RData")
shiny::runApp()
shiny::runApp()
Data2015g <- as.data.frame(Data2015g)
save.image(file="Project2_UD.RData.RData")
shiny::runApp()
Data2015g$Killed <- as.integer(Data2015g$Killed)
Data2015g$Wounded <- as.integer(Data2015g$Wounded)
Data2015g$lon <- as.numeric(Data2015g$lon)
Data2015g$lat <- as.numberic(Data2015g$lat)
Data2015g$lat <- as.numeric(Data2015g$lat)
Data2015g <- as.data.frame(Data2015g)
save.image(file="Project2_UD.RData")
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(Data2015g)
Data2015g <- lapply(Data2015g, function(x) {gsub("Pheonix", "Phoenix", x)})
shiny::runApp()
shiny::runApp()
View(Data2015g)
Data2015g[312, 4] = "Phoenix, AZ"
Data2015g[312, 6] = -112.074
Data2015g[312, 7] = 33.44838
save.image(file="Project2_UD.RData")
shiny::runApp()
shiny::runApp()
